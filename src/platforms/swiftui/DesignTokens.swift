// Design Tokens - Auto-generated SwiftUI
// Do not edit this file manually

import SwiftUI

struct DesignTokens {
    struct Colors {
        static let primary50 = Color(red: 0.973, green: 0.996, blue: 1.000)
        static let primary100 = Color(red: 0.941, green: 0.976, blue: 1.000)
        static let primary200 = Color(red: 0.898, green: 0.961, blue: 1.000)
        static let primary300 = Color(red: 0.765, green: 0.906, blue: 1.000)
        static let primary400 = Color(red: 0.757, green: 0.894, blue: 0.984)
        static let primary500 = Color(red: 0.059, green: 0.200, blue: 0.251)
        static let primary600 = Color(red: 0.059, green: 0.122, blue: 0.251)
        static let primary700 = Color(red: 0.000, green: 0.455, blue: 0.647)
        static let primary800 = Color(red: 0.333, green: 0.416, blue: 0.490)
        static let primary900 = Color(red: 0.278, green: 0.353, blue: 0.400)
        static let gray50 = Color(red: 1.000, green: 1.000, blue: 1.000)
        static let gray100 = Color(red: 0.980, green: 0.980, blue: 0.980)
        static let gray200 = Color(red: 0.953, green: 0.973, blue: 0.988)
        static let gray300 = Color(red: 0.941, green: 0.965, blue: 0.980)
        static let gray400 = Color(red: 0.980, green: 0.992, blue: 1.000)
        static let gray500 = Color(red: 0.906, green: 0.929, blue: 0.941)
        static let gray600 = Color(red: 0.565, green: 0.608, blue: 0.667)
        static let gray700 = Color(red: 0.459, green: 0.459, blue: 0.459)
        static let gray800 = Color(red: 0.439, green: 0.518, blue: 0.592)
        static let gray900 = Color(red: 0.000, green: 0.000, blue: 0.000)
        static let success50 = Color(red: 0.902, green: 0.957, blue: 0.925)
        static let success100 = Color(red: 0.176, green: 0.525, blue: 0.349)
        static let warning50 = Color(red: 0.878, green: 0.961, blue: 1.000)
        static let warning100 = Color(red: 0.000, green: 0.455, blue: 0.647)
        static let error50 = Color(red: 0.988, green: 0.941, blue: 0.933)
        static let error100 = Color(red: 0.792, green: 0.451, blue: 0.451)
        static let error200 = Color(red: 0.980, green: 0.929, blue: 0.929)
        static let error300 = Color(red: 0.635, green: 0.184, blue: 0.184)
        static let info50 = Color(red: 0.976, green: 0.925, blue: 0.953)
        static let info100 = Color(red: 0.486, green: 0.227, blue: 0.376)
        static let neutral50 = Color(red: 1.000, green: 0.945, blue: 0.875)
        static let neutral100 = Color(red: 0.675, green: 0.451, blue: 0.169)
        static let neutral200 = Color(red: 0.969, green: 0.937, blue: 0.894)
        static let neutral300 = Color(red: 0.478, green: 0.369, blue: 0.227)
        static let textPrimary = Color(red: 0.059, green: 0.200, blue: 0.251)
        static let textSecondary = Color(red: 0.459, green: 0.459, blue: 0.459)
        static let textTertiary = Color(red: 0.565, green: 0.608, blue: 0.667)
        static let textInverse = Color(red: 1.000, green: 1.000, blue: 1.000)
        static let textMuted = Color(red: 0.439, green: 0.518, blue: 0.592)
        static let backgroundPrimary = Color(red: 0.973, green: 0.996, blue: 1.000)
        static let backgroundSecondary = Color(red: 1.000, green: 1.000, blue: 1.000)
        static let backgroundTertiary = Color(red: 0.953, green: 0.973, blue: 0.988)
        static let backgroundInverse = Color(red: 0.059, green: 0.200, blue: 0.251)
        static let borderDefault = Color(red: 0.906, green: 0.929, blue: 0.941)
        static let borderHover = Color(red: 0.757, green: 0.894, blue: 0.984)
        static let borderFocus = Color(red: 0.059, green: 0.200, blue: 0.251)
        static let borderLight = Color(red: 0.906, green: 0.929, blue: 0.941)
        static let brandPrimary = Color(red: 0.059, green: 0.200, blue: 0.251)
        static let brandSecondary = Color(red: 0.059, green: 0.122, blue: 0.251)
        static let brandTertiary = Color(red: 0.898, green: 0.961, blue: 1.000)
        static let feedbackSuccess = Color(red: 0.176, green: 0.525, blue: 0.349)
        static let feedbackSuccessBg = Color(red: 0.902, green: 0.957, blue: 0.925)
        static let feedbackWarning = Color(red: 0.000, green: 0.455, blue: 0.647)
        static let feedbackWarningBg = Color(red: 0.878, green: 0.961, blue: 1.000)
        static let feedbackError = Color(red: 0.792, green: 0.451, blue: 0.451)
        static let feedbackErrorBg = Color(red: 0.988, green: 0.941, blue: 0.933)
        static let feedbackInfo = Color(red: 0.486, green: 0.227, blue: 0.376)
        static let feedbackInfoBg = Color(red: 0.976, green: 0.925, blue: 0.953)
        static let feedbackNeutral = Color(red: 0.675, green: 0.451, blue: 0.169)
        static let feedbackNeutralBg = Color(red: 1.000, green: 0.945, blue: 0.875)
    }

    struct Spacing {
        static let _0: CGFloat = 0
        static let _1: CGFloat = 4
        static let _2: CGFloat = 8
        static let _3: CGFloat = 12
        static let _4: CGFloat = 16
        static let _5: CGFloat = 20
        static let _6: CGFloat = 24
        static let _8: CGFloat = 32
        static let _10: CGFloat = 40
        static let _12: CGFloat = 48
        static let _16: CGFloat = 64
        static let _20: CGFloat = 80
        static let _24: CGFloat = 96
    }

    struct FontSize {
        static let xs: CGFloat = 12
        static let sm: CGFloat = 14
        static let base: CGFloat = 16
        static let lg: CGFloat = 18
        static let xl: CGFloat = 20
        static let _2xl: CGFloat = 24
        static let _3xl: CGFloat = 30
        static let _4xl: CGFloat = 36
        static let _5xl: CGFloat = 48
    }

    struct FontFamily {
    }

    struct BorderRadius {
        static let none: CGFloat = 0
        static let sm: CGFloat = 2
        static let base: CGFloat = 4
        static let md: CGFloat = 6
        static let lg: CGFloat = 8
        static let xl: CGFloat = 12
        static let _2xl: CGFloat = 16
        static let full: CGFloat = 9999
    }

}