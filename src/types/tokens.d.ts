// Design Tokens - Auto-generated TypeScript Definitions
// Do not edit this file manually

export interface Colors {
  primary: {
    "50": string;
    "100": string;
    "200": string;
    "300": string;
    "400": string;
    "500": string;
    "600": string;
    "700": string;
    "800": string;
    "900": string;
  };
  accent: {
    "50": string;
    "100": string;
    "200": string;
    "300": string;
    "400": string;
    "500": string;
    "600": string;
    "700": string;
    "800": string;
    "900": string;
  };
  success: {
    "50": string;
    "100": string;
    "200": string;
    "300": string;
  };
  warning: {
    "50": string;
    "100": string;
  };
  error: {
    "50": string;
    "100": string;
    "200": string;
    "300": string;
  };
  neutral: {
    "50": string;
    "100": string;
    "200": string;
    "300": string;
    "400": string;
    "500": string;
    "600": string;
    "700": string;
    "800": string;
    "900": string;
  };
  status: {
    "success": string;
    "warning": string;
    "error": string;
    "info": string;
    "verified": string;
  };
}

export interface Spacing {
  "0": string;
  "1": string;
  "2": string;
  "3": string;
  "4": string;
  "5": string;
  "6": string;
  "8": string;
  "10": string;
  "12": string;
  "16": string;
  "20": string;
  "24": string;
}

export interface Typography {
  fontFamily: {
    "primary": string;
    "secondary": string;
    "mono": string;
  };
  fontSize: {
    "xs": string;
    "sm": string;
    "base": string;
    "lg": string;
    "xl": string;
    "2xl": string;
    "3xl": string;
    "4xl": string;
    "5xl": string;
  };
  fontWeight: {
    "normal": string;
    "medium": string;
    "semibold": string;
    "bold": string;
  };
  lineHeight: {
    "tight": string;
    "normal": string;
    "relaxed": string;
  };
  letterSpacing: {
  };
}

export interface DesignTokens {
  colors: Colors;
  spacing: Spacing;
  typography: Typography;
  borderRadius: Record<string, string>;
  shadows: Record<string, string>;
  opacity: Record<string, string>;
  zIndex: Record<string, number>;
  transitions: {
    duration: Record<string, string>;
    easing: Record<string, string>;
  };
  breakpoints: Record<string, string>;
  source: string;
  lastLoaded: string;
}

// Token value constants
declare const tokens: DesignTokens;
export default tokens;